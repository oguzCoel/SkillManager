package ch.business.quickline.domain;
// default package
// Generated 21.05.2015 20:36:25 by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import ch.business.quickline.domain.Abteilung;

/**
 * Abteilung generated by hbm2java
 */
@Entity
@Table(name = "Abteilung", catalog = "Skillmanager")
public class Abteilung implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Integer abteilungId;
	private String abteilungName;
	private Set<AbteilungProjekt> abteilungProjekts = new HashSet<AbteilungProjekt>(
			0);
	private Set<AbteilungTask> abteilungTasks = new HashSet<AbteilungTask>(0);
	private Set<Mitarbeiter> mitarbeiters = new HashSet<Mitarbeiter>(0);

	public Abteilung() {
	}

	public Abteilung(String abteilungName) {
		this.abteilungName = abteilungName;
	}

	public Abteilung(String abteilungName,
			Set<AbteilungProjekt> abteilungProjekts,
			Set<AbteilungTask> abteilungTasks, Set<Mitarbeiter> mitarbeiters) {
		this.abteilungName = abteilungName;
		this.abteilungProjekts = abteilungProjekts;
		this.abteilungTasks = abteilungTasks;
		this.mitarbeiters = mitarbeiters;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "AbteilungID", unique = true, nullable = false)
	public Integer getAbteilungId() {
		return this.abteilungId;
	}

	public void setAbteilungId(Integer abteilungId) {
		this.abteilungId = abteilungId;
	}

	@Column(name = "AbteilungName", nullable = false, length = 30)
	public String getAbteilungName() {
		return this.abteilungName;
	}

	public void setAbteilungName(String abteilungName) {
		this.abteilungName = abteilungName;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "abteilung")
	public Set<AbteilungProjekt> getAbteilungProjekts() {
		return this.abteilungProjekts;
	}

	public void setAbteilungProjekts(Set<AbteilungProjekt> abteilungProjekts) {
		this.abteilungProjekts = abteilungProjekts;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "abteilung")
	public Set<AbteilungTask> getAbteilungTasks() {
		return this.abteilungTasks;
	}

	public void setAbteilungTasks(Set<AbteilungTask> abteilungTasks) {
		this.abteilungTasks = abteilungTasks;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "abteilung")
	public Set<Mitarbeiter> getMitarbeiters() {
		return this.mitarbeiters;
	}

	public void setMitarbeiters(Set<Mitarbeiter> mitarbeiters) {
		this.mitarbeiters = mitarbeiters;
	}
	
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result
				+ ((abteilungId == null) ? 0 : abteilungId.hashCode());
		result = prime * result
				+ ((abteilungName == null) ? 0 : abteilungName.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Abteilung other = (Abteilung) obj;
		if (abteilungId == null) {
			if (other.abteilungId != null)
				return false;
		} else if (!abteilungId.equals(other.abteilungId))
			return false;
		if (abteilungName == null) {
			if (other.abteilungName != null)
				return false;
		} else if (!abteilungName.equals(other.abteilungName))
			return false;
		return true;
	}
	
	public String toString(){
		return String.format("%s", getAbteilungName());
	}

}
